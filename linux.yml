- hosts: "{{ variable_host | default('linux')}}"

  vars:
    ip: "{{ lookup('file', '{{etc/ansible/admin_sys}}').splitlines() | regex_findall('\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b', multiline=True)}}"
    
  tasks:  
    
  - name: Autorisation de l'authentification par clé SSH
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '#PubkeyAuthentication yes'
      line: 'PubkeyAuthentication yes'

  - name: Interdiction de l'authentification par mot de passe
    lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '#PasswordAuthentication yes'
      line: 'PasswordAuthentication no'

  - name: Redémarrage du service SSH
    service:
      name: sshd
      state: restarted	

  - name: Installation du service UFW pour Ubuntu
    apt:
      name: ufw
      state: present
      update_cache: yes
    when: (ansible_facts['distribution'] == "Ubuntu") and (ufw is undefined)

  - name: Installation du service Firewalld pour CentOS
    yum:
      name: firewalld
      state: present
      update_cache: yes
    when: (ansible_facts['distribution'] == "CentOS") and (firewalld is undefined)

  - name: Installation du service Firewalld pour RedHat
    dnf:
      name: firewalld
      state: present
      update_cache: yes
    when: (ansible_facts['distribution'] == "Rocky") and (firewalld is undefined)

  - name: Autorisation du serveur Ansible pour Ubuntu sur le port 22
    community.general.ufw:
      rule: allow
      port: '22'
      src: 192.168.10.45
    when: (ansible_facts['distribution'] == "Ubuntu")

  - name: Autorisation du serveur Ansible dans la zone trusted pour Centos / RedHat
    ansible.posix.firewalld:
      source: 192.168.10.45
      state: enabled
      permanent: yes
      zone: trusted
    when: (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Rocky")

  - name: Autorisation des adresses IP pour Ubuntu sur le port 22
    community.general.ufw:
      rule: allow
      port: '22'
      src: "{{item}}"
    loop: "{{ip}}"
    when: (ansible_facts['distribution'] == "Ubuntu")    

  - name: Autorisation des adresses IP pour Ubuntu sur le port 161
    community.general.ufw:
      rule: allow
      port: '161'
      src: "{{item}}"
    loop: "{{ip}}"
    when: (ansible_facts['distribution'] == "Ubuntu")    

  - name: Autorisation des adresses IP pour Ubuntu sur le port 9090
    community.general.ufw:
      rule: allow
      port: '9090'
      src: "{{item}}"
    loop: "{{ip}}"
    when: (ansible_facts['distribution'] == "Ubuntu")    
    
  - name: Autorisation des adresses IP dans la zone trusted pour Centos / RedHat
    ansible.posix.firewalld:
      source: "{{item}}"
      state: enabled
      permanent: yes
      zone: trusted
    loop: "{{ip}}"
    when: (ansible_facts['distribution'] == "CentOS") or ansible_facts['distribution'] =="Rocky" 

  - name: Ouverture du service SNMP dans la zone trusted pour Centos / Redhat
    ansible.posix.firewalld:
      service: snmp
      permanent: yes
      state: enabled
      zone: trusted
    when: (ansible_facts['distribution'] == "CentOS") or ansible_facts['distribution'] =="Rocky" 

  - name: Ouverture du service SSH dans la zone trusted pour Centos / Redhat
    ansible.posix.firewalld:
      service: ssh
      permanent: yes
      state: enabled
      zone: trusted
    when: (ansible_facts['distribution'] == "CentOS") or ansible_facts['distribution'] =="Rocky" 

  - name: Ouverture du service Cockpit dans la zone trusted pour Redhat
    ansible.posix.firewalld:
      service: cockpit
      permanent: yes
      state: enabled
      zone: trusted
    when: (ansible_facts['distribution'] == "Rocky")  

  - name: Suppression du service SSH dans la zone public sur Centos / Redhat
    ansible.posix.firewalld:
      service: ssh
      permanent: yes
      state: disabled
      zone: public
    when: (ansible_facts['distribution'] == "CentOS") or ansible_facts['distribution'] =="Rocky" 

  - name: Suppression du service Cockpit dans la zone public sur Redhat
    ansible.posix.firewalld:
      service: cockpit
      permanent: yes
      state: disabled
      zone: public
    when: (ansible_facts['distribution'] == "Rocky") 

  - name: Suppression du service SNMP dans la zone public sur Centos / Redhat
    ansible.posix.firewalld:
      service: snmp
      permanent: yes
      state: disabled
      zone: public
    when: (ansible_facts['distribution'] == "CentOS") or ansible_facts['distribution'] =="Rocky" 

  - name: Vérification de l'existence du service Nginx
    stat: path=/usr/lib/systemd/system/nginx.service
    register: nginx_status

  - name: Vérification de l'existence du service Apache sur Ubuntu
    stat: path=/usr/lib/systemd/system/apache2.service
    register: apache2_status

  - name: Vérification de l'existence du service httpd sur Centos / Redhat
    stat: path=/usr/lib/systemd/system/httpd.service
    register: httpd_status
 
  - name: Ouverture du port 80 sur Ubuntu si Nginx ou Apache est installé
    community.general.ufw:
      rule: allow
      port: '80'
      src: "{{item}}"
    loop: "{{ip}}" 
    when: (ansible_facts['distribution'] == "Ubuntu") and nginx_status.stat.exists or apache2_status.stat.exists    
    
  - name: Ouverture du port 80 sur Centos / Redhat dans la zone trusted si Nginx ou httpd est installé
    ansible.posix.firewalld:
      port: 80/tcp
      permanent: yes
      state: enabled
      zone: trusted
    when: (ansible_facts['distribution'] == "CentOS") or ansible_facts['distribution'] =="Rocky" and (nginx_status.stat.exists) or (httpd_status.stat.exists)  
  
  - name: Activation du service UFW pour Ubuntu
    systemd:
      name: ufw
      state: started
    when: (ansible_facts['distribution'] == "Ubuntu")    
    
  - name: Activation du service Firewalld pour Centos / RedHat
    systemd:
      name: firewalld
      state: started
    when: (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Rocky")
    
  - name: Redémarrage du service UFW pour Ubuntu
    systemd:
      name: ufw
      state: restarted
    when: (ansible_facts['distribution'] == "Ubuntu")    

  - name: Redémarrage du service Firewalld pour Centos / RedHat
    systemd:
      name: firewalld
      state: restarted
    when: (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Rocky")
